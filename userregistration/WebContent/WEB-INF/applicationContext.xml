<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<context:component-scan base-package="com.userregistration" />

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<beans:property name="driverClassName" value="org.postgresql.Driver" />

		<beans:property name="url"
			value="jdbc:postgresql://localhost:5432/userregisteration" />

		<beans:property name="username" value="postgres" />

		<beans:property name="password" value="postgres" />

	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.userregistration.model.Country</beans:value>
				<beans:value>com.userregistration.model.Region</beans:value>
				<beans:value>com.userregistration.model.Role</beans:value>
				<beans:value>com.userregistration.model.User</beans:value>

			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.generate_statistics">true</beans:prop>

				<!-- Caching properteis -->
				<!-- Very Important property. Caching does not work if it is not correct -->
				<beans:prop key="hibernate.cache.region.factory_class">
					org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</beans:prop>


				<beans:prop key="hibernate.cache.use_second_level_cache">true</beans:prop>
				<beans:prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider
				</beans:prop>
				<beans:prop
					key="hibernate.cache.provider_configuration_file_resource_path">ehcache-blah.xml</beans:prop>
				<beans:prop key="hibernate.cache.use_query_cache">true</beans:prop>
				<beans:prop key="hibernate.generate_statistics">true</beans:prop>
				<beans:prop key="hibernate.cache.use_structured_entries">true</beans:prop>


			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager" />


	<beans:bean id="userDAO" class="com.userregistration.dao.UserDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="userServiceSpringBean"
		class="com.userregistration.service.UserServiceImpl" scope="session">
		<beans:property name="userDAO" ref="userDAO"></beans:property>
	</beans:bean>


</beans:beans>